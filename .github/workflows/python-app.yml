name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pandas numpy plotly dash yfinance
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        # Check if test files exist
        if [ -f "test_*.py" ]; then
          echo "Running pytest..."
          pytest -v
        else
          echo "No test files found, running basic functionality check..."
          python -c "
import sys
try:
    import stock_app
    print('✅ App imports successfully')
    print('✅ Basic functionality check passed')
except Exception as e:
    print(f'❌ App import failed: {e}')
    sys.exit(1)
          "
        fi
    
    - name: Run CI Tests
      run: |
        echo "Running CI test suite..."
        python ci_test.py
    

        
    - name: Security check
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true
